name: CSE Trade Data Download

on:
  schedule:
    # Runs daily at 4:00 PM Sri Lankan Time (10:30 AM UTC)
    # Sri Lanka is UTC+5:30, so 4:00 PM LKT = 10:30 AM UTC
    - cron: '30 10 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  download-trade-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
        
    - name: Setup ChromeDriver
      run: |
        # Download and setup ChromeDriver manually to avoid WebDriver Manager issues
        CHROME_VERSION=$(google-chrome --version | cut -d' ' -f3 | cut -d'.' -f1-3)
        echo "Chrome version: $CHROME_VERSION"
        
        # Download compatible ChromeDriver
        CHROMEDRIVER_VERSION="129.0.6668.89"
        wget -O /tmp/chromedriver.zip "https://storage.googleapis.com/chrome-for-testing-public/$CHROMEDRIVER_VERSION/linux64/chromedriver-linux64.zip"
        unzip /tmp/chromedriver.zip -d /tmp/
        sudo mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        
        # Verify installation
        chromedriver --version
      
    - name: Clean WebDriver Manager cache and prevent usage
      run: |
        echo "Preventing WebDriver Manager usage..."
        # Remove any existing WebDriver Manager cache
        rm -rf ~/.wdm
        rm -rf /home/runner/.wdm
        rm -rf /tmp/.wdm
        rm -rf $HOME/.wdm
        
        # Remove any cached chromedriver files that might cause conflicts
        find /home/runner -name "*chromedriver*" -type f -delete 2>/dev/null || true
        find /tmp -name "*chromedriver*" -type f -delete 2>/dev/null || true
        
        # Create empty .wdm directory to prevent WebDriver Manager from working
        mkdir -p ~/.wdm
        chmod 000 ~/.wdm
        
        echo "WebDriver Manager blocked successfully"
        
    - name: Setup virtual display
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Verify Chrome and ChromeDriver setup
      run: |
        echo "=== Chrome and ChromeDriver Verification ==="
        google-chrome --version
        chromedriver --version
        which chromedriver
        ls -la $(which chromedriver)
        echo "ChromeDriver path: $(which chromedriver)"
        echo "DISPLAY=$DISPLAY"
        echo "GITHUB_ACTIONS=$GITHUB_ACTIONS"
        echo "CI=$CI"
        
        # Test ChromeDriver functionality
        chromedriver --port=9515 --whitelisted-ips= &
        sleep 2
        curl -s http://localhost:9515/status || echo "ChromeDriver test failed"
        pkill chromedriver || true
        echo "=== Verification Complete ==="
        
    - name: Create downloads directory
      run: mkdir -p downloads
      
    - name: Run CSE downloader
      run: |
        export DISPLAY=:99
        export GITHUB_ACTIONS=true
        export CI=true
        # Completely prevent WebDriver Manager usage
        export WDM_LOCAL=0
        export WDM_LOG_LEVEL=0
        export PATH="/usr/local/bin:$PATH"
        
        # Verify ChromeDriver one more time
        echo "Final ChromeDriver check:"
        which chromedriver
        chromedriver --version
        
        # Run the script
        python cse_downloader.py
      env:
        DISPLAY: :99
        GITHUB_ACTIONS: true
        CI: true
        WDM_LOCAL: 0
        WDM_LOG_LEVEL: 0
        
    - name: List downloaded files
      run: ls -la downloads/
      
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add downloads/
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "Auto-download CSE trade data - $(date +'%Y-%m-%d %H:%M:%S')"
          git push
        else
          echo "No changes to commit"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
